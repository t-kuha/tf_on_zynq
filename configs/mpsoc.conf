TF_PATCH="yes"
TF_VERSION="v1.15.0"

# export tensorflow variables to configure
TF_BUILD_VARS="TF_NEED_GDR=0"
TF_BUILD_VARS+=" TF_NEED_AWS=0"
TF_BUILD_VARS+=" TF_NEED_GCP=0"
TF_BUILD_VARS+=" TF_NEED_CUDA=0"
TF_BUILD_VARS+=" TF_NEED_HDFS=0"
TF_BUILD_VARS+=" TF_NEED_OPENCL_SYCL=0"
TF_BUILD_VARS+=" TF_NEED_VERBS=0"
TF_BUILD_VARS+=" TF_NEED_MPI=0"
TF_BUILD_VARS+=" TF_NEED_MKL=0"
TF_BUILD_VARS+=" TF_NEED_JEMALLOC=1"
TF_BUILD_VARS+=" TF_ENABLE_XLA=0"
TF_BUILD_VARS+=" TF_NEED_S3=0"
TF_BUILD_VARS+=" TF_NEED_IGNITE=0"
TF_BUILD_VARS+=" TF_NEED_ROCM=0"

BAZEL_VERSION="0.24.1"
BAZEL_AVALIABLE_RAM="" # MB
BAZEL_AVALIABLE_CPU=""  # number of cpu cores (1.0 epresenting single full core)
BAZEL_AVALIABLE_IO=""   # workstation I/O capability (with 1.0 representing average workstation)
# BAZEL_PATCH="yes"

BAZEL_COPT_FLAGS="--copt=-march=armv8-a+crc+simd --copt=-mtune=cortex-a53 --copt=-O3 --copt=-flax-vector-conversions"
BAZEL_COPT_FLAGS+=" --config=monolithic --copt=-funsafe-math-optimizations"
BAZEL_COPT_FLAGS+=" --copt=-ftree-vectorize --copt=-fomit-frame-pointer --copt=-DRASPBERRY_PI --copt=-D_GLIBCXX_USE_CXX11_ABI=0"
BAZEL_COPT_FLAGS+=" --config=noaws --config=nogcp --config=nohdfs --config=nokafka --config=noignite --define tensorflow_mkldnn_contraction_kernel=0"
BAZEL_EXTRA_FLAGS=" --cpu=armeabi --crosstool_top=//tools/local_arm_compiler:toolchain //tensorflow:libtensorflow_cc.so //tensorflow:libtensorflow.so"
# --cpu=armeabi
CROSSTOOL_COMPILER="yes"
# CROSSTOOL_URL="https://releases.linaro.org/components/toolchain/binaries/5.5-2017.10/aarch64-linux-gnu/gcc-linaro-5.5.0-2017.10-x86_64_aarch64-linux-gnu.tar.xz"
# CROSSTOOL_DIR="/home/pentaxmedical/xilinx/Vitis/2019.2/gnu/aarch64/lin/aarch64-linux/"
CROSSTOOL_NAME="aarch64-linux-gnu"
CROSSTOOL_WHEEL_ARCH="linux_aarch64"
CROSSTOOL_EXTRA_INCLUDE=""
